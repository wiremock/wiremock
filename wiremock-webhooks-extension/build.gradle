import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
  repositories {
    maven {
      url "https://oss.sonatype.org"
    }
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'scala'
  id 'signing'
  id 'maven-publish'
  id 'idea'
  id 'eclipse'
  id 'project-report'
  id 'com.github.johnrengelman.shadow'
}

group 'org.wiremock'

dependencies {
  compileOnly project(":")
  implementation platform("com.fasterxml.jackson:jackson-bom:$versions.jackson")
  implementation "com.fasterxml.jackson.core:jackson-core",
      "com.fasterxml.jackson.core:jackson-annotations",
      "com.fasterxml.jackson.core:jackson-databind"
  implementation("com.github.jknack:handlebars-helpers:$versions.handlebars") {
    exclude group: 'org.mozilla', module: 'rhino'
  }
  implementation "com.google.guava:guava:$versions.guava", {
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
  }
  implementation "org.apache.httpcomponents.client5:httpclient5:5.2.1"

  testImplementation project(":")
  testImplementation(platform('org.junit:junit-bom:5.10.0'))
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.hamcrest:hamcrest-core:2.2"
  testImplementation "org.hamcrest:hamcrest-library:2.2"
  testImplementation 'org.awaitility:awaitility:4.2.0'
}

shadowJar {
  archiveBaseName.set('wiremock-webhooks-extension')
  archiveClassifier.set('')

  relocate "org.apache", 'wiremock.webhooks.org.apache'
  relocate "org.slf4j",  "wiremock.webhooks.org.slf4j"
  relocate "com.google", 'wiremock.webhooks.com.google'
  relocate "com.fasterxml.jackson", 'wiremock.webhooks.com.fasterxml.jackson'
  relocate "org.checkerframework", "wiremock.webhooks.org.checkerframework"
  relocate "com.github.jknack", "wiremock.webhooks.com.github.jknack"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier.set('sources')
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}

task testJar(type: Jar, dependsOn: testClasses) {
  archiveClassifier.set('tests')
  from sourceSets.test.output
}

signing {
  required {
    !version.toString().contains("SNAPSHOT") && (gradle.taskGraph.hasTask("uploadArchives") || gradle.taskGraph.hasTask("publish"))
  }
  sign publishing.publications
}

publishing {
  repositories {
    maven {
      url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
      credentials {
        username repoUser
        password repoPassword
      }
    }
  }

  publications {
    main(MavenPublication) { publication ->
      artifactId = "${jar.getArchiveBaseName().get()}"
      project.shadow.component(publication)

      artifact sourcesJar
      artifact javadocJar
      artifact testJar

      pom.packaging 'jar'
      pom.withXml {
        asNode().appendNode('description', 'WireMock webhooks extension')
        asNode().children().last() + pomInfo
      }
    }
  }
}

project.tasks.signMainPublication.dependsOn jar

task release {
  dependsOn clean, shadowJar, publishAllPublicationsToMavenRepository
}

task localRelease {
  dependsOn clean, assemble, publishToMavenLocal
}
