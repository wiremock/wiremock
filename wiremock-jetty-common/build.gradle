buildscript {
  repositories {
    maven {
      url "https://oss.sonatype.org"
    }
    mavenCentral()
  }
}

plugins {
  id 'java-library'
  id 'java-test-fixtures'
  id 'signing'
  id 'maven-publish'
  id 'com.diffplug.spotless' version '6.25.0'
  id "org.sonarqube" version "6.0.1.5171"
  id 'jacoco'
}

group 'org.wiremock'

java {
  sourceCompatibility = 11
  targetCompatibility = 11
  withSourcesJar()
  withJavadocJar()
}

project.ext {
  versions = [
    handlebars     : '4.3.1',
    jetty          : '11.0.24',
    guava          : '33.4.0-jre',
    jackson        : '2.18.2',
    xmlUnit        : '2.10.0',
    jsonUnit       : '2.40.1',
    junitJupiter   : '5.11.4'
  ]
}

dependencies {
  compileOnly platform("org.eclipse.jetty:jetty-bom:$versions.jetty")
  compileOnly "org.eclipse.jetty:jetty-server"
  compileOnly "org.eclipse.jetty:jetty-servlet"
  compileOnly "org.eclipse.jetty:jetty-servlets"
  compileOnly "org.eclipse.jetty:jetty-webapp"
  compileOnly "org.eclipse.jetty:jetty-proxy"
  compileOnly "org.eclipse.jetty.http2:http2-server"
  compileOnly "org.eclipse.jetty:jetty-alpn-server"
  compileOnly "org.eclipse.jetty:jetty-alpn-java-server"
  compileOnly "org.eclipse.jetty:jetty-alpn-java-client"
  compileOnly "org.eclipse.jetty:jetty-alpn-client"

  api project(':wiremock-common')
}

jar {
  archiveBaseName.set('wiremock-jetty11')
  manifest {
    attributes("Implementation-Version": project.version)
    attributes("Implementation-Title": "WireMock with Jetty 11")
  }
}

javadoc {
  exclude "**/CertificateAuthority.java"
  options.addStringOption('Xdoclint:none', '-quiet')
}

signing {
  required {
    !version.toString().contains("SNAPSHOT") && (gradle.taskGraph.hasTask("uploadArchives") || gradle.taskGraph.hasTask("publish"))
  }
  def signingKey = providers.environmentVariable("OSSRH_GPG_SECRET_KEY").orElse("").get()
  def signingPassphrase = providers.environmentVariable("OSSRH_GPG_SECRET_KEY_PASSWORD").orElse("").get()
  if (!signingKey.isEmpty() && !signingPassphrase.isEmpty()) {
    useInMemoryPgpKeys(signingKey, signingPassphrase)
  }
  sign publishing.publications
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/wiremock/wiremock"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }

  publications {
    mavenJava(MavenPublication) { publication ->
      artifactId = "${jar.getArchiveBaseName().get()}"
      from components.java

      pom.withXml {
        asNode().appendNode('description', 'WireMock with Jetty 11 as its HTTP server')
        asNode().children().last() + pomInfo
      }
    }
  }
}

task localRelease {
  dependsOn clean, assemble, publishToMavenLocal
}

test {
  useJUnitPlatform()

  maxParallelForks = runningOnCI ? 1 : 3

  testLogging {
    events "FAILED", "SKIPPED"
    exceptionFormat "full"
  }
}
